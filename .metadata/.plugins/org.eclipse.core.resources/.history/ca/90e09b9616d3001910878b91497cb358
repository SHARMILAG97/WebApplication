package com.revature.WatrerPlant.Service;

import java.time.LocalDate;
import java.util.Scanner;

import com.revature.WaterPlant.dao.OrderDao;
import com.revature.WaterPlant.dao.OrderInterface;
import com.revature.WaterPlant.dao.ReserveDao;
import com.revature.WaterPlant.dao.ReserveInterface;
import com.revature.WaterPlant.dao.StockDao;
import com.revature.WaterPlant.dao.StockInterface;
import com.revature.WaterPlant.exception.DBException;
import com.revature.WaterPlant.model.User;

public class ReserveCans {

	public static void cansReserve(User u)    {
		
		User user = u;
		int Availcans=0;
		StockInterface Sdao = new StockDao();
		try {
		User stock = Sdao.getStock();
		Availcans = Sdao.findOne();
		System.out.println("No of Avilable Cans :"+Availcans);
		System.out.println("Enter No of cans to Reserve");
		Scanner sc = new Scanner(System.in);
		int Reservecans= sc.nextInt();
		
		
		while(Availcans<Reservecans && Reservecans<50) {
			System.out.println("Insufficient Watercans");
			System.out.println("Please enter cans below :"+Availcans+"or below 50");
		}

		LocalDate d = stock.getDate();
		int reservecan = stock.getReservecan();
		OrderInterface dao = new OrderDao();
		if (d != null) {
			reservecan += Reservecans;
			Availcans -= Reservecans;
			Sdao.updateStockOrder(Availcans, ordercan);
			dao.addOder(user, Ordercans);
			System.out.println("Ordered Successfully");
		} else {
			Availcans -= Ordercans;
			dao.addOder(user, Ordercans);
			Sdao.addStockOrder(Ordercans, Availcans);
			System.out.println("Ordered Successfully");

		}
	} catch (DBException e) {
		e.printStackTrace();
	}

	}

}
