package com.revature.WatrerPlant.Service;

import java.time.LocalDate;
import java.util.Scanner;

import com.revature.WaterPlant.dao.OrderDao;
import com.revature.WaterPlant.dao.OrderInterface;
import com.revature.WaterPlant.dao.StockDao;
import com.revature.WaterPlant.dao.StockInterface;
import com.revature.WaterPlant.exception.DBException;
import com.revature.WaterPlant.model.User;

public class OrderCans {

	public static void cansOrder(User u) {

		User user = u;
		int Availcans = 0;
		int Ordercans = 0;
		StockInterface Sdao = new StockDao();
		try {
			User stock = Sdao.getStock();
			Availcans = Sdao.findOne();
			System.out.println("No of Avilable Cans :" + Availcans);
			System.out.println("Enter No of cans to Order");
			Scanner sc = new Scanner(System.in);
			String S = null;
			boolean bl = true;
			boolean b = true;
			while (b) {
				while (bl) {
					try {
						S = sc.next();
						Ordercans = Integer.parseInt(S);
						bl = false;
						break;
					} catch (Exception e) {
						System.out.println(".......Invalid Option.....\n\nPlease Enter an Integer value");
						bl = true;
					}
				}
				if (Availcans < Ordercans) {
					System.out.println("Insufficient Watercans");
					System.out.println("Please enter cans below :" + Availcans);
					b = true;
				} else if (Ordercans > 50) {
					System.out.println("Please enter cans below  50");
					b = true;
				}

				else if (Ordercans <= 0) {
					System.out.println("Please enter cans Above 0");
					b = true;
				} else
					b = false;
				
			}

			LocalDate d = stock.getDate();
			int ordercan = stock.getOrdercan();
			OrderInterface dao = new OrderDao();
			if (d != null) {
				ordercan += Ordercans;
				Availcans -= Ordercans;
				Sdao.updateStockOrder(Availcans, ordercan);
				dao.addOder(user, Ordercans);
				System.out.println("Ordered Successfully");
			} else {
				Availcans -= Ordercans;
				dao.addOder(user, Ordercans);
				Sdao.addStockOrder(Ordercans, Availcans);
				System.out.println("Ordered Successfully");

			}
		} catch (DBException e) {
			e.printStackTrace();
		}
		
	}

}
